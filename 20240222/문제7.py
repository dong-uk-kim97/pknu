"""
클래스는 객체를 표현하는 문법이다. 
예를 들어 게임을 만든다고 하면 기사, 마법사, 궁수, 사제 등 직업별로 클래스를 만들어서 표현할 수 있다.

프로그래밍에서는 현실 세계에 있는 개념들뿐만 아니라 컴퓨터 안에서만 쓰이는 개념들도 클래스로 만들어서 표현한다.
지금까지 나온 기사, 마법사, 궁수,사제처럼 특정한 개념이나 모양으로 존재하는 것을 객체(object)라고 부른다.
프로그래밍으로 객체를 만들 때 사용하는 것이 클래스이다.
게임의 기사 캐릭터를 클래스로 표현하려면 체력, 마나, 물리 공격력, 주문력 등이 필요하다.
그리고 기사 캐릭터는 칼로 베기, 찌르기 등의 스킬이 있어야 한다.
여기서 체력, 마나, 물리 공격력, 주문력 등의 데이터를 클래스의 속성(attribute)이라 부르고, 베기, 찌르기 등의 기능을 메서드(method)라고 부른다.

클래스는 class에 클래스 이름을 대문자로 지정하고, :(콜론)을 붙인 뒤 다음 줄부터 def로 메서드를 작성한다.
메서드는 클래스 안에 들어있는 함수이다.

클래스에서 속성을 만들 떄는 __init__ 메서드 안에서 self.속성에 값을 할당한다.
__init__메서드는 인스턴스를 만들 때 호출되는 특별한 메서드이다.

비공개 속성은 __속성과 같이 이름이 __로 시작해야 한다. 
비공개 속성은 클래스 안에서만 접근할 수 있고 밖에서는 접근할 수 없다.
비공개 속성은 중요한 값인데 바깥으로 함부로 바꾸면 안 될 때 사용한다.

클래스 상속은 물려받은 기능을 유지한 채로 다른 기능을 추가할 때 사용하는 기능이다.
기능을 물려주는 클래스를 기반 클래스(base class), 상속을 받아 새롭게 만드는 클래스를 파생 클래스(derived class)라고 한다.
기반 클래스는 부모 클래스(parent class), 슈퍼 클래스(super class)라고 부르고, 파생 클래스는 자식 클래스(child class), 
서브 클래스(subclass)라고 부른다.
클래스 상속도 기반 클래스의 능력을 그대로 활용하면서 새로운 클래스를 만들 때 사용한다. 
상속을 사용하는 경우 중복되는 기능을 만들지 않아도 된다. 따라서 상속은 기존 기능을 재사용할 수 있어서 효율적이다.
"""

class AI:
    def __init__(self):
        self.hello = "Hello AI"
    def greeting(self):
        print(self.hello)
        
pk = AI()
pk.greeting()